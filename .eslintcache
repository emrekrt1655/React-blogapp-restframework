[{"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\components\\Navbar.js":"1","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\index.js":"2","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\pages\\RegisterPage\\RegisterPage.js":"3","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\pages\\LoginPage\\LoginPage.js":"4","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\context\\AppContext.js":"5","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\services\\postData.js":"6","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\utils\\validations.js":"7","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\pages\\HomePage\\HomePage.js":"8","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\providers\\index.js":"9","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\router\\PrivateRouter.js":"10","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\router\\MainRouter.js":"11","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\components\\PostList.js":"12","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\components\\PostCard.js":"13","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\providers\\Providers.js":"14","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\router\\index.js":"15","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\pages\\PostDetail\\PostDetail.js":"16"},{"size":3747,"mtime":1612014262788,"results":"17","hashOfConfig":"18"},{"size":210,"mtime":1612288232246,"results":"19","hashOfConfig":"18"},{"size":5501,"mtime":1612356335456,"results":"20","hashOfConfig":"18"},{"size":4840,"mtime":1612652542683,"results":"21","hashOfConfig":"18"},{"size":439,"mtime":1612016868152,"results":"22","hashOfConfig":"18"},{"size":371,"mtime":1612357370466,"results":"23","hashOfConfig":"18"},{"size":556,"mtime":1611961886837,"results":"24","hashOfConfig":"18"},{"size":1201,"mtime":1612289058765,"results":"25","hashOfConfig":"18"},{"size":52,"mtime":1612288187841,"results":"26","hashOfConfig":"18"},{"size":503,"mtime":1612288210708,"results":"27","hashOfConfig":"18"},{"size":928,"mtime":1612652606902,"results":"28","hashOfConfig":"18"},{"size":1541,"mtime":1612289124661,"results":"29","hashOfConfig":"18"},{"size":3379,"mtime":1612290254515,"results":"30","hashOfConfig":"18"},{"size":366,"mtime":1612288187837,"results":"31","hashOfConfig":"18"},{"size":54,"mtime":1612288210710,"results":"32","hashOfConfig":"18"},{"size":8467,"mtime":1612652954897,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"nv3ydv",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"37"},"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\components\\Navbar.js",["75"],"import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { appContext } from \"../context/AppContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const history = useHistory();\r\n  const { token, setToken } = useContext(appContext);\r\n  const isAuth = localStorage.getItem('token');\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleProfileClick = () => {\r\n    history.push('/profile')\r\n    setAnchorEl(null)\r\n  };\r\n\r\n  const handleMainPage = () =>  {\r\n    history.push('/');\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    history.push('/');\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormGroup></FormGroup>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={handleMainPage}\r\n          >\r\n            <EcoIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            BloggApp\r\n          </Typography>\r\n          {token ? (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                style={{marginTop: '3.2rem'}}\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleProfileClick}>Profile</MenuItem>\r\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Button\r\n                onClick={() => \r\n                  history.push(\"/login\")\r\n                } color = 'inherit'\r\n              >\r\n                Login\r\n              </Button>\r\n              <Button\r\n                onClick={() => \r\n                  history.push('/register')} color ='inherit'\r\n              >\r\n                Register\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n",["76","77"],"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\index.js",[],"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\pages\\RegisterPage\\RegisterPage.js",["78","79"],"import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { username, email, password } from \"../../utils/validations\";\r\nimport {\r\n  TextField,\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Link,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\r\n\r\nimport { postData } from \"../../services/postData\";\r\n\r\nconst validationSchema = yup.object({\r\n  username,\r\n  email,\r\n  password,\r\n  password2: password,\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://picsum.photos/640/480)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  linkWrapper: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(1.5),\r\n  },\r\n}));\r\n\r\nconst RegisterPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n        console.log(\"values\", values);\r\n        try {\r\n          const result = await postData(\r\n            \"https://restframework-blogapi.herokuapp.com/user/register/\",\r\n            values\r\n          );\r\n          console.log(result?.data);\r\n        } catch ({ response }) {\r\n          if (response) {\r\n            console.log(response.data.non_field_errors[0]);\r\n          } else {\r\n            console.log(\"Something went wrong!\");\r\n          }\r\n        }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LocalMallIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Register\r\n          </Typography>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              value={formik.values.username}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.username && Boolean(formik.errors.username)}\r\n              helperText={formik.touched.username && formik.errors.username}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"password2\"\r\n              name=\"password2\"\r\n              label=\"Password Again\"\r\n              type=\"password\"\r\n              value={formik.values.password2}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.password2 && Boolean(formik.errors.password2)\r\n              }\r\n              helperText={formik.touched.password2 && formik.errors.password2}\r\n            />\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              className={classes.submit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n\r\n          <Grid container className={classes.linkWrapper}>\r\n            <Grid item xs>\r\n              <Link href=\"/login\" variant=\"body2\" mx=\"auto\">\r\n                If You already have an account please login\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Box mt={5}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n              {\"Copyright © \"}\r\n              <Link color=\"inherit\" href=\"/\">\r\n                Our Website\r\n              </Link>{\" \"}\r\n              {new Date().getFullYear()}\r\n              {\".\"}\r\n            </Typography>\r\n          </Box>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RegisterPage","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\pages\\LoginPage\\LoginPage.js",["80","81"],"import React, { useContext } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { email, password } from \"../../utils/validations\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport { appContext } from \"../../context/AppContext\";\r\n\r\nimport { postData } from \"../../services/postData\";\r\nimport axios from \"axios\";\r\nconst validationSchema = yup.object({\r\n  email,\r\n  password,\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://picsum.photos/640/480)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  linkWrapper: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(1.5),\r\n  },\r\n}));\r\n\r\nconst LoginPage = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { token, setToken } = useContext(appContext);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const result = await postData(\r\n          \"https://restframework-blogapi.herokuapp.com/auth/login/\",\r\n          values\r\n        );\r\n        setToken(result?.data?.key);\r\n        localStorage.setItem(\"token\", result?.data?.key);\r\n        history.push(\"/\");\r\n      } catch ({ response }) {\r\n        if (response) {\r\n          console.log(response.data.non_field_errors[0]);\r\n        } else {\r\n          console.log(\"Something went wrongly!\");\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n\r\nreturn (\r\n  <Grid container component=\"main\" className={classes.root}>\r\n    <CssBaseline />\r\n    <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOpenIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Log In\r\n        </Typography>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n\r\n        <Grid container className={classes.linkWrapper}>\r\n          <Grid item xs>\r\n            <Link href=\"/register\" variant=\"body2\" mx=\"auto\">\r\n              If you don't have an account, please Register\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={5}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"/\">\r\n              Our Website\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n          </Typography>\r\n        </Box>\r\n      </div>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\n};\r\n\r\nexport default LoginPage;","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\context\\AppContext.js",[],"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\services\\postData.js",[],"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\utils\\validations.js",["82","83","84","85"],"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\pages\\HomePage\\HomePage.js",["86","87","88"],"import { useState, useCallback, useContext, useEffect } from \"react\";\r\nimport { appContext } from \"../../context/AppContext\";\r\nimport PostList from \"../../components/PostList\";\r\nimport axios from \"axios\";\r\n\r\n const HomePage = () => {\r\n  const { test } = useContext(appContext);\r\n  const [nextUrl, setNextUrl] = useState();\r\n  const [postList, setPostList] = useState([]);\r\n\r\n  const getPostList = async (\r\n    url = \"https://restframework-blogapi.herokuapp.com/api/postlist/\"\r\n  ) => {\r\n    try {\r\n      const result = await axios.get(url);\r\n      setPostList([...postList, ...result?.data?.results]);\r\n      setNextUrl(result?.data?.next);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response.data.non_field_errors[0]);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostList();\r\n  }, []);\r\n\r\n  const handleLoadMore = () => {\r\n    getPostList(nextUrl);\r\n  };\r\n\r\n  if (!postList?.length) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <PostList\r\n        hasNext={!!nextUrl}\r\n        loadMore={handleLoadMore}\r\n        postList={postList}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\providers\\index.js",[],["89","90"],"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\router\\PrivateRouter.js",[],"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\router\\MainRouter.js",["91","92","93","94"],"import { lazy, Suspense, Fragment } from \"react\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport PrivateRouter from \"./PrivateRouter\";\nimport HomePage from \"../pages/HomePage/HomePage\";\nimport LoginPage from \"../pages/LoginPage/LoginPage\";\nimport RegisterPage from \"../pages/RegisterPage/RegisterPage\";\nimport PostDetail from \"../pages/PostDetail/PostDetail\";\nimport Navbar from \"../components/Navbar\";\n\nexport const MainRouter = () => {\n  const isLoggedIn = false;\n\n  return (\n    <BrowserRouter>\n      <Suspense fallback=\"\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} exact />\n          <Route path=\"/register\" component={RegisterPage} exact />\n          <Route path=\"/\" component={HomePage} exact />\n          <PrivateRouter exact path=\"/detail/:slug\" component={PostDetail} />\n        </Switch>\n      </Suspense>\n    </BrowserRouter>\n  );\n};\n","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\components\\PostList.js",[],"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\components\\PostCard.js",["95","96","97","98","99"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport placeholder from \"../assets/placeholder.png\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  module: {\r\n    display: \"-webkit-box\",\r\n    \"-webkit-line-clamp\": 2,\r\n    \"-webkit-box-orient\": \"vertical\",\r\n    \"text-overflow\": \"ellipsis\",\r\n    overflow: \"hidden\",\r\n  },\r\n  image: {\r\n    padding: 3,\r\n  },\r\n  avatar: {\r\n    marginBottom: \"0.35em\",\r\n  },\r\n});\r\n\r\nexport default function MediaCard({ post }) {\r\n  const {\r\n    author,\r\n    content,\r\n    category,\r\n    comment_count,\r\n    like_count,\r\n    view_count,\r\n    image,\r\n    excerpt,\r\n    date_created,\r\n    slug,\r\n    published,\r\n    title,\r\n    hasUserLiked = false,\r\n    \r\n  } = post;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const openDetails = () => {\r\n    history.push(`/detail/${slug}`);\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={openDetails}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={image || placeholder}\r\n          title={title}\r\n          excerpt={excerpt}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {date_created}\r\n          </Typography>\r\n          <p className={classes.module}>{excerpt}</p>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <AccountCircle className={classes.avatar} />\r\n        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n          {author}\r\n        </Typography>\r\n      </CardActions>\r\n      <CardActions>\r\n        <IconButton aria-label=\"add to favorites\" className={classes.image}>\r\n          <FavoriteIcon color={hasUserLiked ? \"secondary\" : \"primary\"} />\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {like_count}\r\n        </Typography>\r\n        <IconButton aria-label=\"view count\" className={classes.image}>\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {view_count}\r\n        </Typography>\r\n        <IconButton aria-label=\"comment count\" className={classes.image}>\r\n          <ChatBubbleOutlineIcon />\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {comment_count}\r\n        </Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\providers\\Providers.js",[],"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\router\\index.js",[],"C:\\Users\\emrek\\Desktop\\Grad-Pro\\Client\\blogapp\\src\\pages\\PostDetail\\PostDetail.js",["100","101","102","103","104","105","106","107","108","109"],"import { Fragment, useState, useCallback, useContext, useEffect } from \"react\";\r\nimport { appContext } from \"../../context/AppContext\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport placeholder from \"../../assets/placeholder.png\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"60%\",\r\n    margin: \"20px auto\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  module: {},\r\n  image: {\r\n    padding: 3,\r\n  },\r\n  avatar: {\r\n    marginBottom: \"0.35em\",\r\n  },\r\n});\r\n\r\nconst PostDetail = () => {\r\n  const { test } = useContext(appContext);\r\n  const [postDetail, setPostDetail] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  let { slug } = useParams();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const getPostDetail = async (\r\n    url = `https://restframework-blogapi.herokuapp.com/api/detail/${slug}`\r\n  ) => {\r\n    try {\r\n      const result = await axios.get(url, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      console.log(result)\r\n      setPostDetail(result?.data);\r\n      console.log(postDetail);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response?.data?.detail);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const {\r\n    author,\r\n    content,\r\n    detail_url,\r\n    comment_count,\r\n    like_count,\r\n    view_count,\r\n    image,\r\n    date_created,\r\n    owner,\r\n    title,\r\n    liked,\r\n    like_url,\r\n    delete_url,\r\n    comments,\r\n    published,\r\n    excerpt,\r\n    category,\r\n  } = postDetail;\r\n\r\n  useEffect(() => {\r\n    getPostDetail();\r\n  }, []);\r\n\r\n  const handleLikeClick = async () => {\r\n    try {\r\n      const result = await axios.post(like_url, null, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      getPostDetail();\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response?.data?.detail);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = async () => {\r\n    try {\r\n      const result = await axios.delete(delete_url, null, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      history.push(`/`);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response?.data?.detail);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCommentChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const handleCommentSend = async (key) => {\r\n    if (key?.charCode === 13) {\r\n      try {\r\n        const result = await axios.post(\r\n          `https://restframework-blogapi.herokuapp.com/api/comment/${slug}`,\r\n          { content: comment },\r\n          {\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        getPostDetail();\r\n      } catch ({ response }) {\r\n        if (response) {\r\n          console.log(response?.data?.detail);\r\n        } else {\r\n          console.log(\"Something went wrong!\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!PostDetail) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={image || placeholder}\r\n            title={title}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {date_created}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {excerpt}\r\n            </Typography>\r\n            <p className={classes.module}>{content}</p>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <AccountCircle className={classes.avatar} />\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            {author}\r\n          </Typography>\r\n        </CardActions>\r\n        <CardActions>\r\n          <IconButton\r\n            aria-label=\"add to favorites\"\r\n            className={classes.image}\r\n            onClick={handleLikeClick}\r\n          >\r\n            <FavoriteIcon color={liked ? \"secondary\" : \"primary\"} />\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {like_count}\r\n          </Typography>\r\n          <IconButton aria-label=\"view count\" className={classes.image}>\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {view_count}\r\n          </Typography>\r\n          <IconButton aria-label=\"comment count\" className={classes.image}>\r\n            <ChatBubbleOutlineIcon />\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {comment_count}\r\n          </Typography>\r\n        </CardActions>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Comments\r\n          </Typography>\r\n          {comments?.length\r\n            ? comments.map((item, idx) => {\r\n                return (\r\n                  <Fragment key={idx}>\r\n                    <hr />\r\n                    <Typography variant=\"h6\">{item?.user}:</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      {item?.content}:\r\n                    </Typography>\r\n                  </Fragment>\r\n                );\r\n              })\r\n            : \"No comments\"}\r\n          <TextField\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"comment\"\r\n            name=\"comment\"\r\n            label=\"Add comment\"\r\n            value={comment}\r\n            onChange={handleCommentChange}\r\n            onKeyPress={handleCommentSend}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        m={1}\r\n        p={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        {owner && (\r\n          <>\r\n            <Box p={1}>\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Delete post\r\n              </Button>\r\n            </Box>\r\n            <Box p={1}>\r\n              <Button\r\n                onClick={() => history.push(`/edit/${slug}`)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Edit post\r\n              </Button>\r\n            </Box>\r\n          </>\r\n        )}\r\n        <Box p={1}>\r\n          <Button\r\n            onClick={() => history.push(\"/create\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Create new post\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n",{"ruleId":"110","severity":1,"message":"111","line":34,"column":9,"nodeType":"112","messageId":"113","endLine":34,"endColumn":15},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"110","severity":1,"message":"118","line":10,"column":3,"nodeType":"112","messageId":"113","endLine":10,"endColumn":19},{"ruleId":"110","severity":1,"message":"119","line":11,"column":3,"nodeType":"112","messageId":"113","endLine":11,"endColumn":11},{"ruleId":"110","severity":1,"message":"120","line":21,"column":8,"nodeType":"112","messageId":"113","endLine":21,"endColumn":13},{"ruleId":"110","severity":1,"message":"121","line":63,"column":11,"nodeType":"112","messageId":"113","endLine":63,"endColumn":16},{"ruleId":"110","severity":1,"message":"122","line":1,"column":18,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"123","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":33},{"ruleId":"110","severity":1,"message":"124","line":1,"column":35,"nodeType":"112","messageId":"113","endLine":1,"endColumn":39},{"ruleId":"110","severity":1,"message":"125","line":1,"column":41,"nodeType":"112","messageId":"113","endLine":1,"endColumn":46},{"ruleId":"110","severity":1,"message":"126","line":1,"column":20,"nodeType":"112","messageId":"113","endLine":1,"endColumn":31},{"ruleId":"110","severity":1,"message":"127","line":7,"column":11,"nodeType":"112","messageId":"113","endLine":7,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":29,"column":6,"nodeType":"130","endLine":29,"endColumn":8,"suggestions":"131"},{"ruleId":"114","replacedBy":"132"},{"ruleId":"116","replacedBy":"133"},{"ruleId":"110","severity":1,"message":"134","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":14},{"ruleId":"110","severity":1,"message":"135","line":1,"column":26,"nodeType":"112","messageId":"113","endLine":1,"endColumn":34},{"ruleId":"110","severity":1,"message":"136","line":3,"column":40,"nodeType":"112","messageId":"113","endLine":3,"endColumn":48},{"ruleId":"110","severity":1,"message":"137","line":12,"column":9,"nodeType":"112","messageId":"113","endLine":12,"endColumn":19},{"ruleId":"110","severity":1,"message":"138","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":14},{"ruleId":"110","severity":1,"message":"139","line":11,"column":10,"nodeType":"112","messageId":"113","endLine":11,"endColumn":13},{"ruleId":"110","severity":1,"message":"140","line":44,"column":5,"nodeType":"112","messageId":"113","endLine":44,"endColumn":12},{"ruleId":"110","severity":1,"message":"141","line":45,"column":5,"nodeType":"112","messageId":"113","endLine":45,"endColumn":13},{"ruleId":"110","severity":1,"message":"142","line":53,"column":5,"nodeType":"112","messageId":"113","endLine":53,"endColumn":14},{"ruleId":"110","severity":1,"message":"126","line":1,"column":30,"nodeType":"112","messageId":"113","endLine":1,"endColumn":41},{"ruleId":"110","severity":1,"message":"139","line":18,"column":10,"nodeType":"112","messageId":"113","endLine":18,"endColumn":13},{"ruleId":"110","severity":1,"message":"127","line":44,"column":11,"nodeType":"112","messageId":"113","endLine":44,"endColumn":15},{"ruleId":"110","severity":1,"message":"143","line":77,"column":5,"nodeType":"112","messageId":"113","endLine":77,"endColumn":15},{"ruleId":"110","severity":1,"message":"142","line":89,"column":5,"nodeType":"112","messageId":"113","endLine":89,"endColumn":14},{"ruleId":"110","severity":1,"message":"141","line":91,"column":5,"nodeType":"112","messageId":"113","endLine":91,"endColumn":13},{"ruleId":"128","severity":1,"message":"144","line":96,"column":6,"nodeType":"130","endLine":96,"endColumn":8,"suggestions":"145"},{"ruleId":"110","severity":1,"message":"146","line":100,"column":13,"nodeType":"112","messageId":"113","endLine":100,"endColumn":19},{"ruleId":"110","severity":1,"message":"146","line":119,"column":13,"nodeType":"112","messageId":"113","endLine":119,"endColumn":19},{"ruleId":"110","severity":1,"message":"146","line":143,"column":15,"nodeType":"112","messageId":"113","endLine":143,"endColumn":21},"no-unused-vars","'isAuth' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'axios' is defined but never used.","'token' is assigned a value but never used.","'boolean' is defined but never used.","'number' is defined but never used.","'date' is defined but never used.","'array' is defined but never used.","'useCallback' is defined but never used.","'test' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPostList'. Either include it or remove the dependency array.","ArrayExpression",["149"],["147"],["148"],"'lazy' is defined but never used.","'Fragment' is defined but never used.","'Redirect' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'Button' is defined but never used.","'red' is defined but never used.","'content' is assigned a value but never used.","'category' is assigned a value but never used.","'published' is assigned a value but never used.","'detail_url' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPostDetail'. Either include it or remove the dependency array.",["150"],"'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [getPostList]",{"range":"155","text":"156"},"Update the dependencies array to be: [getPostDetail]",{"range":"157","text":"158"},[885,887],"[getPostList]",[2713,2715],"[getPostDetail]"]